// <auto-generated />
using System;
using CL4PTR4P.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CL4PTR4P.Migrations
{
    [DbContext(typeof(TournamentContext))]
    [Migration("20190630221010_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062");

            modelBuilder.Entity("CL4PTR4P.Data.Match", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.HasKey("Id");

                    b.ToTable("Matches");
                });

            modelBuilder.Entity("CL4PTR4P.Data.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("MatchId");

                    b.Property<string>("Name");

                    b.Property<int>("Score");

                    b.Property<int>("TeamId");

                    b.HasKey("Id");

                    b.HasIndex("MatchId");

                    b.HasIndex("TeamId");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("CL4PTR4P.Data.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("MatchId");

                    b.Property<string>("Name");

                    b.Property<int>("Score");

                    b.HasKey("Id");

                    b.HasIndex("MatchId");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("CL4PTR4P.Data.Player", b =>
                {
                    b.HasOne("CL4PTR4P.Data.Match")
                        .WithMany("Players")
                        .HasForeignKey("MatchId");

                    b.HasOne("CL4PTR4P.Data.Team")
                        .WithMany("Players")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CL4PTR4P.Data.Team", b =>
                {
                    b.HasOne("CL4PTR4P.Data.Match")
                        .WithMany("Teams")
                        .HasForeignKey("MatchId");
                });
#pragma warning restore 612, 618
        }
    }
}
